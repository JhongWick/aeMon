@model IEnumerable<Entities.KPI>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    tr, th, td {
        padding: 7px !important;
        padding-top: 14px !important;
    }

    .box-body {
        height: 350px !important;
    }

    span {
        font-size: 100% !important;
        width: 100% !important;
    }

    .label {
        display: inline-block !important;
    }
</style>
<!-- Main content -->
@*<div class="row" style="margin-bottom:10px;">
        <div class="col-md-4  ">
            <div class="btn btn-default btn-block" style="background-color:#FDA42E;color:white!important;font-weight:bold;">Cacao</div>
        </div>
        <div class="col-md-4  ">

            <div class="btn btn-default btn-block" style="background-color:#C3530D ;color:white!important;font-weight:bold;">Farmers</div>
        </div>
        <div class="col-md-4  ">
            <div class="btn btn-default btn-block" style="background-color: #71B42D;color:white!important;font-weight:bold;">Trees</div>
        </div>
    </div>*@


<!-- /.col (LEFT) -->
<div class="row">

    <div class="col-md-4">

        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title"><i class=" glyphicon glyphicon-list"> </i></h3>

            </div>
            <div class="box-body " style="height:550px !important;">
                <table class="">
                   
                    <tbody>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(255, 104, 46, 1);color:white;">Land area planted (ha)</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(169, 64, 13, 1);color:white;">Volume processed</span></td>
                        </tr>
                        @*<tr>

                                <td><span class="label label-default" style="background-color:rgba(105, 130, 38,1) ;color:white;">Volume processed	For international market</span></td>
                            </tr>*@
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(102, 0, 0,1);color:white;">Volume sold</span></td>
                        </tr>
                        @*<tr>

                                <td><span class="label label-default" style="background-color:rgba(102, 51, 0,1) ;color:white;">Volume sold as raw material Export</span></td>
                            </tr>*@
                        <tr>

                            <td><span class="label label-default" style="background-color:rgba(102, 102, 0,1) ;color:white;">Number of farmers/growers </span></td>
                        </tr>
                        @*<tr>

                                <td><span class="label label-default" style="background-color:rgba(51, 102, 0,1) ;color:white;">Number of farmers/growers Female</span></td>
                            </tr>*@
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(0, 102, 102,1);color:white;">Number of municipalities engaged</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(0, 51, 102,1);color:white;">Number of nurseries </span></td>
                        </tr>
                        <tr>
                            <td><span class="label label-default" style="background-color: rgba(102, 0, 102,1);color:white;">Number of postharvest facilities utilized</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(128, 255, 0, 0.8);color:white;">Number of SMEs created</span></td>
                        </tr>
                        <tr>
                            <td><span class="label label-default" style="background-color: rgba(204, 153, 255, 0.8);color:white;">Number of jobs created</span></td>
                        </tr>
                        <tr>
                            <td>
                                &nbsp;
                                
                            </td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(255, 102, 178, 1);color:white;">Income generated</span></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
    </div>

    <div class="col-md-8">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">Productivity Outcome Line Chart</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="lineChart" style="height:330px;"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
    <div class="col-md-8">
        <div class="box box-default">

            <div class="box-body" style="height:100% !important;">
                <div class="chart">
                    <canvas id="lineChart4" style="height:150px;"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>



<div class="row">

    <div class="col-md-4">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title"><i class=" glyphicon glyphicon-list"> </i></h3>

            </div>
            <div class="box-body " style="height:390px !important">
                <table class="">
                    
                    <tbody>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(255, 104, 46, 1);color:white;">Number of funding assistance given</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(169, 64, 13, 1);color:white;">Number of funding institutions/organizations</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color:rgba(105, 130, 38,1) ;color:white;">Number of policy reforms instituted</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(102, 0, 0,1);color:white;">Number of seedlings distributed </span></td>
                        </tr>
                        @*<tr>

                                <td><span class="label label-default" style="background-color:rgba(102, 51, 0,1) ;color:white;">Number of seedlings distributed DENR-NGP</span></td>
                            </tr>
                            <tr>

                                <td><span class="label label-default" style="background-color:rgba(102, 102, 0,1) ;color:white;">Number of seedlings distributed PCA-KAANIB</span></td>
                            </tr>
                            <tr>

                                <td><span class="label label-default" style="background-color:rgba(51, 102, 0,1) ;color:white;">Number of seedlings distributed DAR</span></td>
                            </tr>*@
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(0, 102, 102,1);color:white;">Number of techno trainings/seminar conducted</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(0, 51, 102,1);color:white;">Number of farmers trained  </span></td>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(102, 0, 102,1);color:white;">Number of IEC materials distributed</span></td>

                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
    <div class="col-md-8">
        <!-- /.box -->
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">Support Services Outcome Line Chart</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body" style="height:390px !important">
                <div class="chart">
                    <canvas id="lineChart2" style="height:370px;"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>






<div class="row">

    <div class="col-md-4">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="glyphicon glyphicon-list"> </i></h3>

            </div>
            <div class="box-body " style="height:620px !important;">
                <table class="">
                 
                    <tbody>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(255, 104, 46, 1);color:white;"> Number of linkages established </span></td>
                        </tr>
                        @*<tr>

            <td><span class="label label-default" style="background-color: rgba(169, 64, 13, 1);color:white;"> Number of linkages established International</span></td>
        </tr>*@

                        <tr>

                            <td><span class="label label-default" style="background-color:rgba(102, 51, 0,1) ;color:white;">Number of cacao farms certified</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color:rgba(102, 102, 0,1) ;color:white;">Number of nurseries accredited </span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color:rgba(51, 102, 0,1) ;color:white;">Number of model farms and learning/demo<br /> sites established</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(0, 102, 102,1);color:white;">Number of research works developed</span></td>
                        </tr>
                        <tr>
                            <td>
                                &nbsp;

                            </td>
                        </tr>
                        <tr>
                            <td>
                                &nbsp;

                            </td>
                        </tr>
                        <tr>
                            <td>
                                &nbsp;

                            </td>
                        </tr>
                        <tr>
                            <td>
                                &nbsp;

                            </td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color:rgba(105, 130, 38,1) ;color:white;">Percentage of farmers who apply pests and<br /> diseases management</span></td>
                        </tr>
                        <tr>

                            <td><span class="label label-default" style="background-color: rgba(102, 0, 0,1);color:white;">Percentage of farmers who apply<br /> Good Agricultural Practices( GAPs)</span></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
    <div class="col-md-8">
        <!-- /.box -->
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">Linkages and  Good Agricultural Practices Outcome Line Chart</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="chart">
                    <canvas id="lineChart3" style="height:330px;"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <div class="box box-default">

            <div class="box-body" style="height:250px !important;">
                <div class="chart">
                    <canvas id="lineChart5" style="height:220px;"></canvas>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>








<!-- AREA CHART DISPLAY NONE FOR SOME REASON -->
<div class="box box-default" style="display:none;">
    <div class="box-header with-border">
        <h3 class="box-title">Target Chart</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <canvas id="areaChart" style="height:500px"></canvas>
        </div>
    </div>
    <!-- /.box-body -->
</div>
<div class="box box-default" style="display:none;">
    <div class="box-header with-border">
        <h3 class="box-title">Target Chart</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <canvas id="areaChart2" style="height:500px"></canvas>
        </div>
    </div>
    <!-- /.box-body -->
</div>
<div class="box box-default" style="display:none;">
    <div class="box-header with-border">
        <h3 class="box-title">Target Chart</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <canvas id="areaChart3" style="height:500px"></canvas>
        </div>
    </div>
    <!-- /.box-body -->
</div>
<!-- /.box -->
<div class="box box-default" style="display:none;">
    <div class="box-header with-border">
        <h3 class="box-title">Target Chart</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <canvas id="areaChart4" style="height:500px"></canvas>
        </div>
    </div>
    <!-- /.box-body -->
</div>
<!-- /.box -->

<div class="box box-default" style="display:none;">
    <div class="box-header with-border">
        <h3 class="box-title">Target Chart</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart">
            <canvas id="areaChart5" style="height:500px"></canvas>
        </div>
    </div>
    <!-- /.box-body -->
</div>
<!-- /.box -->
<!------------------------------------------------------------------------->



<script>
    $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
        var areaChartCanvas2 = $('#areaChart2').get(0).getContext('2d')
        var areaChartCanvas3 = $('#areaChart3').get(0).getContext('2d')
        var areaChartCanvas4 = $('#areaChart4').get(0).getContext('2d')
        var areaChartCanvas5 = $('#areaChart5').get(0).getContext('2d')
        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas)
        var areaChart2 = new Chart(areaChartCanvas2)
        var areaChart3 = new Chart(areaChartCanvas3)
        var areaChart4 = new Chart(areaChartCanvas4)
        var areaChart5 = new Chart(areaChartCanvas5)
        var Hectar_Array = @Html.Raw(Json.Encode(ViewBag.Hectar_Array));

        var VolumeMarket_Array = @Html.Raw(Json.Encode(ViewBag.VolumeMarket_Array));

        @*var VolumeInternational_Array = @Html.Raw(Json.Encode(ViewBag.VolumeInternational_Array));*@

        var VolumeSoldMarket_Array = @Html.Raw(Json.Encode(ViewBag.VolumeSoldMarket_Array));

        @*var VolumeSoldInternational_Array = @Html.Raw(Json.Encode(ViewBag.VolumeSoldInternational_Array));*@

        var Male_Array = @Html.Raw(Json.Encode(ViewBag.Male_Array));

        @*var Female_Array = @Html.Raw(Json.Encode(ViewBag.Female_Array));*@

        var MunicipalitiesEngaged_Array = @Html.Raw(Json.Encode(ViewBag.MunicipalitiesEngaged_Array));

        var NumberOfNurseries_Array = @Html.Raw(Json.Encode(ViewBag.NumberOfNurseries_Array));

        var NoOfPostharvest_Array = @Html.Raw(Json.Encode(ViewBag.NoOfPostharvest_Array));

        var IncomeGenerated_Array = @Html.Raw(Json.Encode(ViewBag.IncomeGenerated_Array));

        var SMEs_Array = @Html.Raw(Json.Encode(ViewBag.SMEs_Array));

        var JobsCreated_Array = @Html.Raw(Json.Encode(ViewBag.JobsCreated_Array));

        var NoOfFundingAssistance_Array = @Html.Raw(Json.Encode(ViewBag.NoOfFundingAssistance_Array));

        var NoOfFundingInstitutions_Array = @Html.Raw(Json.Encode(ViewBag.NoOfFundingInstitutions_Array));

        var NoOfPoliciReforms_Array = @Html.Raw(Json.Encode(ViewBag.NoOfPoliciReforms_Array));

        var DA_Array = @Html.Raw(Json.Encode(ViewBag.DA_Array));

        @*var DENR_NGP_Array = @Html.Raw(Json.Encode(ViewBag.DENR_NGP_Array));

        var PCA_Kaanib_Array = @Html.Raw(Json.Encode(ViewBag.PCA_Kaanib_Array));

        var DAR_Array = @Html.Raw(Json.Encode(ViewBag.DAR_Array));*@

        var Trainings_Array = @Html.Raw(Json.Encode(ViewBag.Trainings_Array));

        var FarmesrsTrained_Array = @Html.Raw(Json.Encode(ViewBag.FarmesrsTrained_Array));

        var IECMaterials_Array = @Html.Raw(Json.Encode(ViewBag.IECMaterials_Array));

        var LinkagesLocal_Array = @Html.Raw(Json.Encode(ViewBag.LinkagesLocal_Array));

        @*var LinkagesInternational_Array = @Html.Raw(Json.Encode(ViewBag.LinkagesInternational_Array));*@

        var DiseasesManagement_Array = @Html.Raw(Json.Encode(ViewBag.DiseasesManagement_Array));

        var GoodAgriculturalPractices_Array = @Html.Raw(Json.Encode(ViewBag.GoodAgriculturalPractices_Array));

        var CacaoFarmsCertified_Array = @Html.Raw(Json.Encode(ViewBag.CacaoFarmsCertified_Array));

        var NurseriesAccredited_Array = @Html.Raw(Json.Encode(ViewBag.NurseriesAccredited_Array));

        var ModelFarms_Array = @Html.Raw(Json.Encode(ViewBag.ModelFarms_Array));

        var ResearchWorkDeveloped_Array = @Html.Raw(Json.Encode(ViewBag.ResearchWorkDeveloped_Array));

        var YearArray = @Html.Raw(Json.Encode(ViewBag.Year_array));

        var areaChartData = {
            labels: YearArray,
            datasets: [
                {
                    label: 'Hectar',
                    fillColor: 'rgba(255, 255, 255, 1)',
                    strokeColor: 'rgba(255, 104, 46, 1)',
                    pointColor: 'rgba(253, 164, 46, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(253, 164, 46,1)',

                    data: Hectar_Array
                },
                {
                    label: 'VolumeMarket',
                    fillColor: 'rgba(255, 255, 255, 0.9)',
                    strokeColor: 'rgba(169, 64, 13, 1)',
                    pointColor: 'rgba(195, 83, 13, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(195, 83, 13,1)',

                    data: VolumeMarket_Array
                },
                //{
                //    label: 'VolumeInternational',
                //    fillColor: 'rgba(113, 180, 45, 0.8)',
                //    strokeColor: 'rgba(105, 130, 38,1)',
                //    pointColor: '#71B42D',
                //    pointStrokeColor: 'rgba(113, 180, 45,1)',
                //    pointHighlightFill: '#fff',
                //    pointHighlightStroke: 'rgba(113, 180, 45,1)',
                //    data: VolumeInternational_Array
                //},
                {
                    label: 'VolumeSoldMarket',
                    fillColor: 'rgba(102, 0, 0, 0.8)',
                    strokeColor: 'rgba(102, 0, 0,1)',
                    pointColor: '#660000',
                    pointStrokeColor: 'rgba(102, 0, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(102, 0, 0,1)',

                    data: VolumeSoldMarket_Array
                },

                //{
                //    label: 'VolumeSoldInternational',
                //    fillColor: 'rgba(102, 51, 0, 0.8)',
                //    strokeColor: 'rgba(102, 51, 0,1)',
                //    pointColor: '#663300',
                //    pointStrokeColor: 'rgba(102, 51, 0,1)',
                //    pointHighlightFill: '#fff',
                //    pointHighlightStroke: 'rgba(102, 51, 0,1)',

                //    data: VolumeSoldInternational_Array
                //},
                {
                    label: 'Male',
                    fillColor: 'rgba(102, 102, 0, 0.8)',
                    strokeColor: 'rgba((102, 102, 0,1)',
                    pointColor: '#666600',
                    pointStrokeColor: 'rgba((102, 102, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba((102, 102, 0,1)',

                    data: Male_Array
                },
                //{
                //    label: 'Female',
                //    fillColor: 'rgba(51, 102, 0, 0.8)',
                //    strokeColor: 'rgba(51, 102, 0,1)',
                //    pointColor: '#336600',
                //    pointStrokeColor: 'rgba(51, 102, 0,1)',
                //    pointHighlightFill: '#fff',
                //    pointHighlightStroke: 'rgba(51, 102, 0,1)',

                //    data: Female_Array
                //},
                {
                    label: 'MunicipalitiesEngaged',
                    fillColor: 'rgba(0, 102, 102, 0.8)',
                    strokeColor: 'rgba(0, 102, 102,1)',
                    pointColor: '#006666',
                    pointStrokeColor: 'rgba(0, 102, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0, 102, 102,1)',

                    data: MunicipalitiesEngaged_Array
                },
                {
                    label: 'NumberOfNurseries',
                    fillColor: 'rgba(0, 51, 102, 0.8)',
                    strokeColor: 'rgba(0, 51, 102,1)',
                    pointColor: '#003366',
                    pointStrokeColor: 'rgba(0, 51, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0, 51, 102,1)',

                    data: NumberOfNurseries_Array
                },
                {
                    label: 'NoOfPostharvest',
                    fillColor: 'rgba(102, 0, 102, 0.8)',
                    strokeColor: 'rgba(102, 0, 102,1)',
                    pointColor: '#660066',
                    pointStrokeColor: 'rgba(102, 0, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(102, 0, 102,1)',

                    data: NoOfPostharvest_Array
                },
                //{
                //    label: 'IncomeGenerated',
                //    fillColor: 'rgba(255, 102, 178, 0.8)',
                //    strokeColor: 'rgba(255, 102, 178, 1)',
                //    pointColor: 'rgba(255, 102, 178, 1)',
                //    pointStrokeColor: 'rgba(255, 102, 178, 1)',
                //    pointHighlightFill: '#fff',
                //    pointHighlightStroke: 'rgba(255, 102, 178, 1)',

                //    data: IncomeGenerated_Array
                //},
                {
                    label: 'SMEs',
                    fillColor: 'rgba(128, 255, 0, 0.8)',
                    strokeColor: 'rgba(128, 255, 0, 0.8)',
                    pointColor: 'rgba(128, 255, 0, 0.8)',
                    pointStrokeColor: 'rgba(128, 255, 0, 0.8)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(128, 255, 0, 0.8)',

                    data: SMEs_Array
                },
                {
                    label: 'JobsCreated',
                    fillColor: 'rgba(204, 153, 255, 0.8)',
                    strokeColor: 'rgba(204, 153, 255, 0.8)',
                    pointColor: 'rgba(204, 153, 255, 0.8)',
                    pointStrokeColor: 'rgba(204, 153, 255, 0.8)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(204, 153, 255, 0.8)',

                    data: JobsCreated_Array
                }



            ]
        }
        var areaChartData2 = {
            labels: YearArray,
            datasets: [


                {
            label: 'NoOfFundingAssistance',
                    fillColor: 'rgba(255, 255, 255, 1)',
                    strokeColor: 'rgba(255, 104, 41, 1)',
                    pointColor: 'rgba(253, 164, 46, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(253, 164, 46,1)',

                data: NoOfFundingAssistance_Array
                },
                {
            label: 'NoOfFundingInstitutions',
                    fillColor: 'rgba(255, 255, 255, 0.9)',
                    strokeColor: 'rgba(169, 64, 13, 1)',
                    pointColor: 'rgba(195, 83, 13, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(195, 83, 13,1)',

                data: NoOfFundingInstitutions_Array
                },
                {
            label: 'NoOfPoliciReforms',
                    fillColor: 'rgba(113, 180, 45, 0.8)',
                    strokeColor: 'rgba(105, 130, 38,1)',
                    pointColor: '#71B42D',
                    pointStrokeColor: 'rgba(113, 180, 45,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(113, 180, 45,1)',
                data: NoOfPoliciReforms_Array
                },
                {
            label: 'DA',
                    fillColor: 'rgba(102, 0, 0, 0.8)',
                    strokeColor: 'rgba(102, 0, 0,1)',
                    pointColor: '#660000',
                    pointStrokeColor: 'rgba(102, 0, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(102, 0, 0,1)',

                data: DA_Array
                },

            //    {
            //label: 'DENR_NGP',
            //        fillColor: 'rgba(102, 51, 0, 0.8)',
            //        strokeColor: 'rgba(102, 51, 0,1)',
            //        pointColor: '#663300',
            //        pointStrokeColor: 'rgba(102, 51, 0,1)',
            //        pointHighlightFill: '#fff',
            //        pointHighlightStroke: 'rgba(102, 51, 0,1)',

            //    data: DENR_NGP_Array
            //    },
            //    {
            //label: 'PCA_Kaanib',
            //        fillColor: 'rgba(102, 102, 0, 0.8)',
            //        strokeColor: 'rgba((102, 102, 0,1)',
            //        pointColor: '#666600',
            //        pointStrokeColor: 'rgba((102, 102, 0,1)',
            //        pointHighlightFill: '#fff',
            //        pointHighlightStroke: 'rgba((102, 102, 0,1)',

            //    data: PCA_Kaanib_Array
            //    },
            //    {
            //label: 'DAR',
            //        fillColor: 'rgba(51, 102, 0, 0.8)',
            //        strokeColor: 'rgba(51, 102, 0,1)',
            //        pointColor: '#336600',
            //        pointStrokeColor: 'rgba(51, 102, 0,1)',
            //        pointHighlightFill: '#fff',
            //        pointHighlightStroke: 'rgba(51, 102, 0,1)',

            //    data: DAR_Array
            //    },
                {
            label: 'Trainings',
                    fillColor: 'rgba(0, 102, 102, 0.8)',
                    strokeColor: 'rgba(0, 102, 102,1)',
                    pointColor: '#006666',
                    pointStrokeColor: 'rgba(0, 102, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0, 102, 102,1)',

                    data: Trainings_Array
                },
                {
            label: 'FarmesrsTrained',
                    fillColor: 'rgba(0, 51, 102, 0.8)',
                    strokeColor: 'rgba(0, 51, 102,1)',
                    pointColor: '#003366',
                    pointStrokeColor: 'rgba(0, 51, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0, 51, 102,1)',

                data: FarmesrsTrained_Array
                },
                {
            label: 'IECMaterials',
                    fillColor: 'rgba(102, 0, 102, 0.8)',
                    strokeColor: 'rgba(102, 0, 102,1)',
                    pointColor: '#660066',
                    pointStrokeColor: 'rgba(102, 0, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(102, 0, 102,1)',

                data: IECMaterials_Array
                }



            ]
        }
        var areaChartData3 = {
            labels: YearArray,
            datasets: [

                {
            label: 'LinkagesLocal',
                    fillColor: 'rgba(255, 255, 255, 1)',
                    strokeColor: 'rgba(255, 104, 41, 1)',
                    pointColor: 'rgba(253, 164, 46, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(253, 164, 46,1)',

                data: LinkagesLocal_Array
                },
            //    {
            //label: 'LinkagesInternational',
            //        fillColor: 'rgba(255, 255, 255, 0.9)',
            //        strokeColor: 'rgba(169, 64, 13, 1)',
            //        pointColor: 'rgba(195, 83, 13, 1)',
            //        pointStrokeColor: '#c1c7d1',
            //        pointHighlightFill: '#fff',
            //        pointHighlightStroke: 'rgba(195, 83, 13,1)',

            //    data: LinkagesInternational_Array
            //    },

                {
            label: 'CacaoFarmsCertified',
                    fillColor: 'rgba(102, 51, 0, 0.8)',
                    strokeColor: 'rgba(102, 51, 0,1)',
                    pointColor: '#663300',
                    pointStrokeColor: 'rgba(102, 51, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(102, 51, 0,1)',

                data: CacaoFarmsCertified_Array
                },
                {
            label: 'NurseriesAccredited',
                    fillColor: 'rgba(102, 102, 0, 0.8)',
                    strokeColor: 'rgba((102, 102, 0,1)',
                    pointColor: '#666600',
                    pointStrokeColor: 'rgba((102, 102, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba((102, 102, 0,1)',

                data: NurseriesAccredited_Array
                },
                {
            label: 'ModelFarms',
                    fillColor: 'rgba(51, 102, 0, 0.8)',
                    strokeColor: 'rgba(51, 102, 0,1)',
                    pointColor: '#336600',
                    pointStrokeColor: 'rgba(51, 102, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(51, 102, 0,1)',

                data: ModelFarms_Array
                },
                {
            label: 'ResearchWorkDeveloped',
                    fillColor: 'rgba(0, 102, 102, 0.8)',
                    strokeColor: 'rgba(0, 102, 102,1)',
                    pointColor: '#006666',
                    pointStrokeColor: 'rgba(0, 102, 102,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0, 102, 102,1)',

                data: ResearchWorkDeveloped_Array
                }


            ]
        }
        var areaChartData4 = {
            labels: YearArray,
            datasets: [

                {
                    label: 'IncomeGenerated',
                    fillColor: 'rgba(255, 102, 178, 0.8)',
                    strokeColor: 'rgba(255, 102, 178, 1)',
                    pointColor: 'rgba(255, 102, 178, 1)',
                    pointStrokeColor: 'rgba(255, 102, 178, 1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(255, 102, 178, 1)',

                    data: IncomeGenerated_Array
                }


            ]
        }
        var areaChartData5 = {
            labels: YearArray,
            datasets: [


                {
                    label: 'DiseasesManagement',
                    fillColor: 'rgba(113, 180, 45, 0.8)',
                    strokeColor: 'rgba(105, 130, 38,1)',
                    pointColor: '#71B42D',
                    pointStrokeColor: 'rgba(113, 180, 45,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(113, 180, 45,1)',
                    data: DiseasesManagement_Array
                },
                {
                    label: 'GoodAgriculturalPractices',
                    fillColor: 'rgba(102, 0, 0, 0.8)',
                    strokeColor: 'rgba(102, 0, 0,1)',
                    pointColor: '#660000',
                    pointStrokeColor: 'rgba(102, 0, 0,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(102, 0, 0,1)',

                    data: GoodAgriculturalPractices_Array
                }


            ]
        }
        var areaChartOptions = {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function (value, index, values) {
                            return value.toLocaleString("en-US", { style: "currency", currency: "USD" });
                        }
                    }
                }]
            },
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        }

        //Create the line chart
        areaChart.Line(areaChartData, areaChartOptions)
        areaChart2.Line(areaChartData2, areaChartOptions)
        areaChart3.Line(areaChartData3, areaChartOptions)
        areaChart4.Line(areaChartData4, areaChartOptions)
        areaChart5.Line(areaChartData5, areaChartOptions)
        //-------------
        //- LINE CHART -
        //--------------
        var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
        var lineChartCanvas2 = $('#lineChart2').get(0).getContext('2d')
        var lineChartCanvas3 = $('#lineChart3').get(0).getContext('2d')
        var lineChartCanvas4 = $('#lineChart4').get(0).getContext('2d')
        var lineChartCanvas5 = $('#lineChart5').get(0).getContext('2d')
        var lineChart = new Chart(lineChartCanvas)
        var lineChart2 = new Chart(lineChartCanvas2)
        var lineChart3 = new Chart(lineChartCanvas3)
        var lineChart4 = new Chart(lineChartCanvas4)
        var lineChart5 = new Chart(lineChartCanvas5)
        var lineChartOptions = areaChartOptions
        lineChartOptions.datasetFill = false
        lineChart.Line(areaChartData, lineChartOptions)
        lineChart2.Line(areaChartData2, lineChartOptions)
        lineChart3.Line(areaChartData3, lineChartOptions)
        lineChart4.Line(areaChartData4, lineChartOptions)
        lineChart5.Line(areaChartData5, lineChartOptions)
        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
        var pieChart = new Chart(pieChartCanvas)
        var PieData = [
            {
                value: 700,
                color: '#f56954',
                highlight: '#f56954',
                label: 'Chrome'
            },
            {
                value: 500,
                color: '#00a65a',
                highlight: '#00a65a',
                label: 'IE'
            },
            {
                value: 400,
                color: '#f39c12',
                highlight: '#f39c12',
                label: 'FireFox'
            },
            {
                value: 600,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Safari'
            },
            {
                value: 300,
                color: '#3c8dbc',
                highlight: '#3c8dbc',
                label: 'Opera'
            },
            {
                value: 100,
                color: '#d2d6de',
                highlight: '#d2d6de',
                label: 'Navigator'
            }
        ]
        var pieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: '#fff',
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: 'easeOutBounce',
            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions)

        //-------------
        //- BAR CHART -
        //-------------
        var barChartCanvas = $('#barChart').get(0).getContext('2d')
        var barChart = new Chart(barChartCanvas)
        var barChartData = areaChartData
        barChartData.datasets[1].fillColor = '#00a65a'
        barChartData.datasets[1].strokeColor = '#00a65a'
        barChartData.datasets[1].pointColor = '#00a65a'
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        }

        barChartOptions.datasetFill = false
        barChart.Bar(barChartData, barChartOptions)
    })</script>
