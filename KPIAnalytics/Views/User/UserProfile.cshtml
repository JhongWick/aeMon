@model Entities.User

@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-8">
            <!-- Profile Image -->
            <div class="box box-info" style="height:500px !important;">
                <div class="box-body ">


                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
        <div class="col-md-4">
            <!-- Profile Image -->

            <div class="box box-widget widget-user">
                <!-- Add the bg color to the header using any of the bg-* classes -->
                <div class="widget-user-header bg-aqua-active">
                    <h3 class="widget-user-username">@Html.DisplayFor(model => model.UserName)</h3>
                    <h5 class="widget-user-desc">@DataAccessLayer.RoleData.GetById(@DataAccessLayer.UserRoleData.GetByUserId(Model.UserId).RoleId).Name</h5>
                </div>
                <div class="widget-user-image">
                    <i class="fa fa-user-circle-o  img-circle" alt="User Image" style="font-size: 6em;"></i>
                    
                </div>

                <div class="box-footer">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="description-block">
                                <h5 class="description-header">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.MiddleName) @Html.DisplayFor(model => model.LastName) @Html.DisplayFor(model => model.NameExt)</h5>
                                <span class="description-text">User</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                        <!-- /.col -->
                     
                    </div>
                    <ul class="list-group list-group-unbordered">
                        <li class="list-group-item">
                            <b>About me</b> <a href="#" onclick="EditProfile(@Model.UserId)" class="pull-right"><i id="EditProf" class="fa fa-pencil">&nbsp;update profile</i></a>
                        </li>

                    </ul>
                    <strong><i class="fa fa-mail-reply margin-r-5"></i> Email Address</strong>
                    <p class="text-muted">
                        @Html.DisplayFor(model => model.Email)
                    </p>
                    <hr>
                    <strong><i class="fa fa-mobile-phone margin-r-5"></i> Contact Number</strong>
                    <p class="text-muted">
                        @Html.DisplayFor(model => model.ContactNumber)
                    </p>
                    <hr>
                    <strong><i class="fa fa-map-marker margin-r-5"></i> Region</strong>
                    <p class="text-muted">@DataAccessLayer.RegionData.returnName(@Model.Region)</p>
                    <hr>
                    <strong><i class="fa fa-user-circle-o margin-r-5"></i> Role</strong>
                    <p class="text-muted">
                        @DataAccessLayer.RoleData.GetById(@DataAccessLayer.UserRoleData.GetByUserId(Model.UserId).RoleId).Name
                    </p>
                    <!-- /.row -->
                </div>
                
                @*</div>
        <div class="box-body box-profile">
            <img class="profile-user-img img-responsive img-circle" src="../../dist/img/user4-128x128.jpg" alt="User profile picture">
            <h3 class="profile-username text-center">@Html.DisplayFor(model => model.UserName)</h3>
            <p class="text-muted text-center">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.MiddleName) @Html.DisplayFor(model => model.LastName) @Html.DisplayFor(model => model.NameExt)</p>*@



            </div>
            <!-- /.box-body -->



        </div>


        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->

<div class="modal fade " id="myModal" style="width:50% !important;margin-left:auto !important;margin-right:auto !important;" data-backdrop="static">
    <div class="modal-dialog" id="myDialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title" id="modaltitle"></h3>
            </div>
            <div class="modal-body" id="myModalBodyDiv">
                <span>Add New</span>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>

                <a href="#" class="btn btn-success" onclick="DeleteUser()">Confirm</a>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">



    var EditProfile = function (id) {
        var url = "/User/EditProfile";
        $.ajax({
            type: "GET",
            url: url,
            data: { UserId: id },
            success: function (result) {
                $("#myModalBodyDiv").html(result);
                $("#myModal").modal("show");
                $(".modal-title").text('Edit Profile?');
                $(".modal-footer").hide();
                $("#error-display").text("");
                $("#error-display").hide();
                $("#passlbl").hide();
                $("#password").hide();
                $("#cpasslbl").hide();
                $("#confirmpw").hide();
            },
            error: function () { console.log("error: result is null"); }
        })
    }
    $(function () {
        $('#dataTables-example').DataTable({
            responsive: true
        });
        $('#myModal').on("click", "#submitAdd", function () {
            if (validSubmit('add')) {
                checkDupicateUsername($("#username").val());
                if ($("#error-display").text() == 0) {
                    $('#formAdd').submit();
                }
            }
        });
        $('#myModal').on("click", "#submitEdit", function () {
            if (validSubmit('edit')) {
                if ($("#User").val() != $("#username").val()) {
                    checkDupicateUsername($("#username").val());
                } else {
                    $("#error-display").text("");
                    $("#error-display").hide();
                }
                if ($("#error-display").text().length == 0) {
                    $('#formEdit').submit();
                }
            }
        });
        $('#myModal').on("mousedown, mouseleave, focus", "#username", function () {
            $("#error-display").text("");
            $("#error-display").hide();
        });
        $('#myModal').on("click", "#password-changed", function () {
            if (typeof ($("#formEdit")) != 'undefined' && $("#formEdit") != null) {
                if ($('#password-changed').is(':checked')) {
                    $("#passlbl").show();
                    $("#password").show();
                    $("#cpasslbl").show();
                    $("#confirmpw").show();
                } else {
                    $("#password").val("");
                    $("#confirmpw").val("");
                    $("#passlbl").hide();
                    $("#password").hide();
                    $("#cpasslbl").hide();
                    $("#confirmpw").hide();
                }
            }
        });
        $('#myModal').on("blur, change", "#confirmpw", function () {
            password1 = $('#password').val().trim();
            password2 = $('#confirmpw').val().trim();
            if (password1 != password2) {
                $('#error-display').text("Password and Confirm Password are not equal.");
                $('#error-display').show();
            } else {
                $("#error-display").text("");
                $("#error-display").hide();
            }
        });
    });

    function checkDupicateUsername(username) {
        url = "/User/CheckDuplicate"
        $.ajax({
            type: "GET",
            url: url,
            async: false,
            data: { username: username },
            success: function (response) {
                if (response.success) {
                    $("#error-display").text("Username already exists")
                    $("#error-display").show();
                } else {
                    $("#error-display").text("");
                    $("#error-display").hide();
                }
            },
            error: function () { console.log("error: result is null"); }
        })
    }

    var isUserDeleted = function () {
        if ($('#isDeleted').is(':checked')) {
            $('#isDeleted').val('true');
        } else {
            $('#isDeleted').val('false');
        }
    }

    var displayEmpID = function () {
        $('#empID').val($('#employeeID').val());
    }

    var AddNew = function () {
        debugger
        var url = "/User/Add";
        $("#myModalBodyDiv").load(url, function () {
            $("#modaltitle").text('Add User');
            $("#myModal").modal("show");
            $(".modal-footer").hide();
            $("#error-display").text("");
            $("#error-display").hide();
        });
    }



    var DeleteUser = function (id) {
        var url = "/User/Delete";

        $.ajax({
            type: "GET",
            url: url,
            data: { UserId: id },
            success: function (result) {
                $("#myModalBodyDiv").html(result);
                $("#myModal").modal("show");
                $(".modal-title").text('Delete User?');
                $(".modal-footer").hide();
            },
            error: function () { console.log("error: result is null"); }
        })
    };

    function validSubmit(action) {
        $('#error-display').text("");
        $('#error-display').hide();
        valid = true;
        errorMsg = "";
        if ($('#Region').children("option:selected").text() == "Select Region...") {
            debugger
            valid = false;
            RegionErrorMsg = "Region";
        } else {
            RegionErrorMsg = "";
        }
        //if ($('#employeeID').val().trim().length == 0) {
        //    valid = false;
        //    emperrorMsg = "EmployeeName ";
        //} else {
        //    emperrorMsg = "";
        //}
        if ($('#username').val().trim().length == 0) {
            valid = false;
            usererrorMsg = "UserName ";
        } else {
            usererrorMsg = "";
        }
        pwerrorMsg = "";
        confpwerrorMsg = "";
        if (action == 'add' || $('#password-changed').is(':checked')) {
            if ($('#password').val().trim().length == 0) {
                valid = false;
                pwerrorMsg = "Password ";
            }
            if ($('#password').val().trim() != $('#confirmpw').val().trim()) {
                valid = false;
                confpwerrorMsg = "Password and Confirm Password are not equal. ";
            }
        }
        if (valid == false) {
            errorMsg = RegionErrorMsg + " " + usererrorMsg + " " + pwerrorMsg + " " + confpwerrorMsg;
            $('#error-display').html("Error! Required field(s): <i>" + errorMsg.trim() + "</i>");
            $('#error-display').show();
        }
        return valid;
    }


</script>
